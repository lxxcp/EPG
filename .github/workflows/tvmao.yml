name: TV Program EPG Updater

on:
  schedule:
    - cron: '0 0,12 * * *'  # UTC时间每天0点和12点（北京时间8点和20点）
  workflow_dispatch:

jobs:
  update-epg:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Shanghai  # 设置时区为北京时间

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4 lxml fake-useragent

    - name: Run EPG Generator
      run: |
        echo "开始生成EPG数据..."
        if ! python tvmao.py; then
          echo "::error::EPG生成失败！检查tvmao.py脚本"
          exit 1
        fi
        echo "生成日志内容："
        cat tvmao.log

    - name: Check XML file
      id: check_xml
      run: |
        if [ -s tvmao.xml ]; then
          echo "xml_exists=true" >> $GITHUB_OUTPUT
          echo "检测到有效XML文件"
        else
          echo "::error::XML文件为空或不存在"
          echo "xml_exists=false" >> $GITHUB_OUTPUT
          exit 1
        fi

    - name: Configure Git
      run: |
        git config --global user.name "${{ github.actor }}"
        git config --global user.email "${{ github.actor }}@users.noreply.github.com"
        echo "Git用户配置完成"

    - name: Commit Changes
      if: steps.check_xml.outputs.xml_exists == 'true'
      run: |
        cd $GITHUB_WORKSPACE
        git add tvmao.xml tvmao.log

        # 显示调试信息
        echo "当前工作目录：$(pwd)"
        echo "文件状态："
        git status --short

        # 生成标准化提交信息
        COMMIT_TIME=$(date +'%Y-%m-%d %H:%M (CST)')
        COMMIT_MSG="EPG自动更新 $COMMIT_TIME"

        # 检查是否有实际变更
        if ! git diff-index --quiet HEAD --; then
          echo "检测到有效变更，执行提交..."
          git commit -m "$COMMIT_MSG"
          echo "::notice ::提交成功：$COMMIT_MSG"
        else
          echo "::warning ::没有检测到文件变更"
          exit 0  # 正常退出避免工作流失败
        fi

    - name: Push Changes
      if: steps.check_xml.outputs.xml_exists == 'true'
      run: |
        echo "开始推送变更..."
        git pull --rebase origin main  # 防止推送冲突
        if git push; then
          echo "::notice ::成功推送到仓库"
        else
          echo "::error::推送失败，尝试强制推送..."
          git push --force
          exit 1
        fi

    - name: Skip Commit
      if: steps.check_xml.outputs.xml_exists != 'true'
      run: echo "::warning ::XML文件检查未通过，跳过提交步骤"
